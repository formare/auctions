#!hets -I

# $Id: Vickrey-Vickrey-vickreyA.hpf 840 2013-03-11 22:19:46Z till $
# 
# Auction Theory Toolbox
# 
# Authors:
# * Christoph Lange <math.semantic.web@gmail.com>
# * Till Mossakowski <till.mossakowski@dfki.de>
# 
# Dually licenced under
# * Creative Commons Attribution (CC-BY) 3.0
# * ISC License (1-clause BSD License)
# See LICENSE file for details
# (Rationale for this dual licence: http://arxiv.org/abs/1107.3212)

# Proves Vickrey/Vickrey#vickreyA

use Vickrey_proof_trans.het
dg basic Lemmas1
set goals allocation_unique
set axioms allocation_def
prove #works

set goals only_one_maximum
set axioms 
prove # disproved!

set goals allocated_implies_spa_winner
set axioms second_price_auction_def, allocation_def, allocation_unique, second_price_auction_winner_def
set time-limit 2000
prove # disproved!

set goals not_allocated_implies_spa_loser
set axioms second_price_auction_def second_price_auction_winner_def
prove # works

set goals only_max_bidder_wins
set axioms allocation_def gt_def second_price_auction_def deviation_def_index maximum_is_greater_or_equal deviation_def_otherwise only_one_maximum
prove

# only_max_bidder_wins needed here???

set goals test_spa_winner_payoff_0step
prover SPASS
prove

set goals second_price_auction_winner_payoff
set axioms maximum_is_component ga_non_empty_sort_index allocation_def ga_non_empty_sort_participant maximum_sufficient 1_mult gt_one_imp_gt_0 gt_def second_price_auction_winners_payment_def arg_max_set_def second_price_auction_def ga_non_empty_sort_bids antisym deviation_vec_range deviation_range deviation_vec_def payoff_def second_price_auction_winner_def maximum_greater_or_equal_remaining_maximum second_price_auction_loser_def not_allocated_implies_spa_loser_cons allocated_implies_spa_winner_cons test_spa_winner_payoff_0step only_one_maximum payoff_vector_def
prove

set goals test_spa_loser_payoff_0step
set axioms not_allocated_implies_spa_loser_cons second_price_auction_loser_def payoff_vector_def
prover SPASS
prove

# Actual goal
set goals second_price_auction_loser_payoff
set time-limit 1000
prover eprover
prove

set goals test_spa_winner_payoff_3step
prover eprover
prove

# Actual goal
set goals winners_payoff_on_deviation_from_valuation
set time-limit 1000
prove


