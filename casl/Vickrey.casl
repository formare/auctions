%{
CL: There are some things that I need to ask Till; these are prefixed with CL@TM.
}%
library Vickrey

from Basic/StructuredDatatypes get Bag

%% main concepts 
spec SingleGoodAuction =
    %% for now declaring our own sorts also for sorts that the basic CASL library, or Hets-lib, have built in, until we understand what to reuse and how
    sorts
    	PositiveReal < NonNegativeReal;
    	Boolean
    types
        Bids ::= Bag[NonNegativeReal];
        Allocation ::= Bag[Boolean];
        Payments ::= Bag[NonNegativeReal];
        Valuations ::= Bag[PositiveReal];
    preds
        bids: Bids
        allocation: Bids * Allocation;
            %[CL@TM: Can we enforce that these two bags need to have the same length?]%
        vickreyPayment: Bids * Payments;
        valuation: Valuations;
    ops
        payoff: PositiveReal * Boolean * NonNegativeReal -> NonNegativeReal;
end